// Generated by CoffeeScript 1.3.3
(function() {
  var DoccoRunner, child_process,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  child_process = require('child_process');

  module.exports = DoccoRunner = (function() {

    DoccoRunner.prototype.brunchPlugin = true;

    DoccoRunner.prototype.type = 'javascript';

    DoccoRunner.prototype.extension = 'js';

    DoccoRunner.prototype.pattern = /src\/.+\.(js|coffee|litcoffee)/;

    DoccoRunner.prototype.files = [];

    function DoccoRunner(config) {
      this.config = config;
    }

    DoccoRunner.prototype.compile = function(params, callback) {
      var _ref;
      if (_ref = params.path, __indexOf.call(this.files, _ref) < 0) {
        this.files.push(params.path);
      }
      return callback(null, params);
    };

    DoccoRunner.prototype.onCompile = function(generatedFiles) {
      var command, execPath;
      execPath = 'node_modules/docco-brunch/node_modules/docco/bin/docco';
      command = "" + execPath + " " + (this.files.join(' '));
      return child_process.exec(command, function(error, stdout, stderr) {
        if (error != null) {
          return console.log("exec error: " + error);
        }
      });
    };

    return DoccoRunner;

  })();

}).call(this);
